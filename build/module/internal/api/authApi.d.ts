/**
 * Juno
 * Juno Public API Docs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http from 'http';
import { IssueApiKeyRequest } from '../model/issueApiKeyRequest';
import { IssueApiKeyResponse } from '../model/issueApiKeyResponse';
import { IssueJWTResponse } from '../model/issueJWTResponse';
import { Authentication, Interceptor } from '../model/models';
import { HttpBearerAuth } from '../model/models';
export declare enum AuthApiApiKeys {
}
export declare class AuthApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        API_Key: HttpBearerAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: AuthApiApiKeys, value: string): void;
    set accessToken(accessToken: string | (() => string));
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Issues a new API key for the project tied to the specified environment.
     * @param xUserPassword Password of the admin or superadmin user
     * @param xUserEmail Email of an admin or superadmin user
     * @param issueApiKeyRequest
     */
    authControllerCreateApiKey(xUserPassword: string, xUserEmail: string, issueApiKeyRequest: IssueApiKeyRequest, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: IssueApiKeyResponse;
    }>;
    /**
     *
     * @summary Deletes an API key, detaching it from its project.
     * @param authorization A valid API key
     */
    authControllerDeleteApiKey(authorization: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body?: any;
    }>;
    /**
     * JSON Web Tokens are used for the vast majority of API-gateway calls. The Juno SDK provides the means of automatically authenticating through this route given a valid API key.
     * @summary Generates a temporary JWT for the project tied to a specified API key.
     * @param authorization A valid API key
     */
    authControllerGetJWT(authorization: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: IssueJWTResponse;
    }>;
}
